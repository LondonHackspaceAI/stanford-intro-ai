(include "set-compiler.scm")
(include "set-config.scm")

(define /load i/load)

;; egrep '^ +.*'\''\(.*load' .gambc/load.scm|egrep -v '^;' | perl -wne 'm|"(.*?)"| and print "$1\n"' > _inactive; perl -wne 'm|\((.?/load).*?(".*?")| and print "($2 . $1)\n"' < .gambc/load.scm > _load
;; (begin (def tc (list->table (map (lambda (p) (cons p #t)) (call-with-input-file "_inactive" read-lines)))) (def tform (list->table (call-with-input-file "_load" read-all))) `(begin ,@(map (lambda (v) (let* ((v* (scm-stripsuffix v)) (e `(,(or (table-ref tform v* #f) `c/load) ,v*))) (if (table-ref tc v* #f) `(quote ,e) e))) (lib))))

;; then fix (c/load "lib/math/fftw_Cpart" cc-options: "-O0 -gdwarf-4 -g3" ld-options: "-lfftw3 -lfftw3f -lfftw3l")

(begin
  (/load "lib/cj-source")
  (/load "lib/define-macro-star")
  (/load "lib/fixnum")
  (/load "lib/cj-phasing")
  (/load "lib/simple-match-1")
  (/load "lib/cj-inline-1")
  (/load "lib/srfi-1")
  (/load "lib/list-util-1")
  (/load "lib/string-util-4")
  (/load "lib/test")
  (/load "lib/cj-env")
  (/load "lib/cj-symbol")
  (/load "lib/test-lib-1")
  (/load "lib/C")
  (/load "lib/string-util-1")
  (/load "lib/improper-list")
  (/load "lib/list-util")
  (/load "lib/named")
  (/load "lib/srfi-11")
  (/load "lib/simple-match")
  (/load "lib/cj-struct-tag")
  (/load "lib/lazy-1")
  (/load "lib/debuggable-promise")
  (/load "lib/lazy")
  (/load "lib/scheme-meta")
  (/load "lib/cj-source-util-2")
  (/load "lib/char-util")
  (/load "lib/code-util")
  (/load "lib/cj-functional-2")
  (/load "lib/improper-list-1")
  (/load "lib/predicates-1")
  (/load "lib/cj-struct")
  (/load "lib/fallible-1")
  (/load "lib/cj-typed-1")
  (/load "lib/cj-typed")
  (c/load "lib/cj-gambit-sys")
  (/load "lib/cj-source-util")
  (/load "lib/cj-functional")
  (/load "lib/cj-source-2")
  (/load "lib/define-nested")
  (/load "lib/slib-sort")
  (/load "lib/list-util-2")
  (/load "lib/cj-alist")
  (/load "lib/string-util")
  (/load "lib/cj-match")
  (/load "lib/table-1")
  (/load "lib/cj-warn")
  (/load "lib/cj-source-wraps")
  (/load "lib/cj-expansion")
  (/load "lib/cut")
  (/load "lib/srfi-13-kmp")
  (/load "lib/cj-env-2")
  (/load "lib/local-test")
  (/load "lib/string-util-2")
  (/load "lib/cj-exception")
  (/load "lib/cj-test")
  (/load "lib/list-util-lazy")
  (/load "lib/dot-oo")
  (/load "lib/define-module")
  (/load "lib/enum")
  (/load "lib/vector-util")
  (/load "lib/cj-source-quasiquote")
  (/load "lib/define-strict-and-lazy")
  (/load "lib/cj-inline")
  (/load "lib/symboltable-1")
  (/load "lib/predicates")
  (/load "lib/cj-cmp")
  (/load "lib/lazy-debug")
  (/load "lib/show")
  (/load "lib/stream")
  (/load "lib/weak-srfi-1")
  (/load "lib/cj-math")
  (/load "lib/test-random")
  (/load "lib/easy-1")
  (/load "lib/oo-util")
  (/load "lib/test-lib")
  (/load "lib/more-oo")
  (/load "lib/dsssl")
  (/load "lib/symboltable")
  (/load "lib/cj-seen")
  (/load "lib/tree-util")
  (/load "lib/joo")
  (/load "lib/jclass")
  (/load "lib/class")
  (/load "lib/easy")
  '(/load "lib/exceptions")
  '(/load "lib/2d-shape")
  '(/load "lib/2d-polar")
  (/load "lib/if-let")
  (/load "lib/Maybe")
  (/load "lib/Result")
  '(/load "lib/U")
  '(/load "lib/address")
  (/load "lib/alist")
  '(/load "lib/atomic-box")
  (/load "lib/cj-port")
  '(/load "lib/bag")
  (/load "lib/unclean")
  (/load "lib/string-util-3")
  '(/load "lib/template")
  '(/load "lib/hashcollection")
  '(/load "lib/bitset")
  '(/load "lib/cached")
  '(/load "lib/catch-throw")
  '(/load "lib/cc")
  '(/load "lib/check-equal")
  '(/load "lib/cj-c-types")
  (c/load "lib/cj-string")
  (/load "lib/cj-string-flatten")
  (/load "lib/cj-c-util")
  '(/load "lib/cj-cmp-location")
  '(/load "lib/cj-curry")
  '(/load "lib/cj-env-test")
  '(/load "lib/cj-exception-handler")
  (/load "lib/cj-ffi")
  '(/load "lib/cj-html-util")
  (/load "lib/cj-path")
  (/load "lib/keyword-alist")
  (c/load "lib/posix/cj-c-errno_Cpart")
  (/load "lib/posix/cj-c-errno")
  (c/load "lib/posix/cj-posix")
  (/load "lib/string-bag")
  (/load "lib/cj-io-util")
  '(/load "lib/cj-let-named-star")
  '(/load "lib/cj-posixpath")
  '(/load "lib/cj-setf")
  '(/load "lib/cj-shortcuts")
  '(/load "lib/cj-source-lambda")
  '(/load "lib/cj-source-test")
  '(/load "lib/stream-Maybe")
  '(/load "lib/cj-sxml")
  '(/load "lib/oo-vector-lib")
  '(/load "lib/oo-lib-string")
  '(/load "lib/oo-util-lazy")
  '(/load "lib/cj-ssxpath")
  '(/load "lib/cj-standarddeclares")
  '(/load "lib/cj-sxml-io")
  '(/load "lib/cj-sxml-keyed")
  '(/load "lib/cj-sxml-keyed-benchmark")
  '(/load "lib/srfi-1-macros")
  '(/load "lib/cj-sxml-serializer")
  '(/load "lib/cj-sxmltemplates")
  '(/load "lib/cj-syntax")
  '(/load "lib/cj-u8vector-util")
  '(/load "lib/cj-ulist")
  '(/load "lib/utf8")
  '(/load "lib/u8vector0")
  '(/load "lib/hex")
  '(/load "lib/cj-url-encode")
  '(/load "lib/random")
  '(/load "lib/cj-url-encode-test")
  '(/load "lib/code-cj-functional")
  '(/load "lib/code-comparison-chain")
  (/load "lib/wbtree")
  (/load "lib/wbcollection")
  '(/load "lib/collection-on")
  '(/load "lib/test-logic")
  '(/load "lib/warn-plus")
  '(/load "lib/math-approximate")
  '(/load "lib/rgb-types")
  '(/load "lib/colorspaces")
  '(/load "lib/rgb")
  '(/load "lib/color")
  '(/load "lib/compat")
  '(/load "lib/fluid-let")
  '(/load "lib/md5")
  '(/load "lib/compile")
  '(/load "lib/constants")
  '(/load "lib/continuation")
  '(/load "lib/eol")
  '(/load "lib/csv-defaults")
  '(/load "lib/posix/interrupts")
  '(/load "lib/data-compressor")
  '(/load "lib/realrandom")
  '(/load "lib/tempfile")
  '(/load "lib/oo-lib-vector")
  '(/load "lib/fstable")
  '(/load "lib/fscache")
  '(/load "lib/unixtime-Cpart-compiletime")
  '(/load "lib/english")
  '(/load "lib/unixtime-types")
  '(/load "lib/unixtime-Cpart")
  '(/load "lib/dateparse")
  '(/load "lib/debug")
  '(/load "lib/debuggable-promise-everywhere")
  '(/load "lib/delimcc-simple")
  '(/load "lib/delimcc-simple-test")
  '(/load "lib/domain-name")
  '(/load "lib/dot-oo-optim")
  '(/load "lib/dot-oo-test")
  '(/load "lib/dot")
  '(/load "lib/fallible")
  '(/load "lib/exception-modules")
  (/load "lib/failing")
  '(/load "lib/failure")
  '(/load "lib/fast-math")
  '(/load "lib/fixnum-test")
  '(/load "lib/unixtime")
  '(/load "lib/format-time")
  '(/load "lib/oo-lib-u8vector")
  '(/load "lib/hide")
  '(/load "lib/if-debug")
  '(/load "lib/improper-length")
  '(/load "lib/improper-list-more")
  '(/load "lib/json-write")
  (/load "lib/typed-list")
  '(/load "lib/typed-alist")
  '(/load "lib/keyword-typed-alist")
  '(/load "lib/list-range")
  '(/load "lib/list-util-3")
  '(/load "lib/math/vectorlib")
  '(/load "lib/parallel")
  '(/load "lib/math/fftw_Cpart-macros")
  '(/load "lib/math/fftw_Cpart")
  '(/load "lib/math/fftw")
  '(/load "lib/math/formula")
  '(/load "lib/math/image/effects/utils")
  '(/load "lib/math/image/effects/light")
  '(/load "lib/math/mathlib")
  '(/load "lib/math/vectorlib-1")
  '(/load "lib/math/image/effects/newspaper")
  '(/load "lib/posix/mmap")
  '(/load "lib/u8-parse")
  '(/load "lib/math/image/pnm")
  '(/load "lib/math/image/pnmatrix-macros")
  '(/load "lib/math/image/pnmatrix-compiled")
  '(/load "lib/math/image/pnmatrix-base")
  '(/load "lib/math/image/pnmatrix")
  '(/load "lib/math/image/effects/rim")
  '(/load "lib/math/image/effects/transparency")
  '(/load "lib/math/mapfn")
  '(/load "lib/oo-lib-u32vector")
  '(/load "lib/math/image/visualize")
  '(/load "lib/math/image/examples/rwanda")
  '(/load "lib/math/image/pnm-utils")
  '(/load "lib/math/image/pnmatrix-tests")
  '(/load "lib/math/integral")
  '(/load "lib/math/vectorlib-2")
  '(/load "lib/maybe-list")
  '(/load "lib/memoize")
  '(/load "lib/string-quote")
  '(/load "lib/mime-type")
  '(/load "lib/mod/config-example")
  '(/load "lib/mod/gambit")
  '(/load "lib/mod/imperative-load-tree")
  '(/load "lib/mod/lib")
  '(/load "lib/mod/mod")
  '(/load "lib/mod/monad")
  '(/load "lib/mod/monadic-load-tree")
  '(/load "lib/mod/remote")
  '(/load "lib/mod/usersyntax")
  '(/load "lib/monad/syntax")
  '(/load "lib/monad/io")
  '(/load "lib/monad/transaction-cps")
  '(/load "lib/monad/transaction-multival")
  '(/load "lib/more-io-util")
  '(/load "lib/number-util")
  '(/load "lib/oo-gambit")
  '(/load "lib/oo-lib-f32vector")
  '(/load "lib/oo-lib-f64vector")
  '(/load "lib/oo-lib-s8vector")
  '(/load "lib/oo-lib-u16vector")
  '(/load "lib/oo-lib-s16vector")
  '(/load "lib/oo-lib-s32vector")
  '(/load "lib/oo-lib-u64vector")
  '(/load "lib/oo-lib-s64vector")
  '(/load "lib/oo-lib-all")
  '(/load "lib/oo-list-vector")
  '(/load "lib/oo-vector-lib-test")
  '(/load "lib/oo-vector-list")
  '(/load "lib/parameter-once")
  '(/load "lib/parse1")
  '(/load "lib/partial-apply")
  '(/load "lib/posix/cj-posix-example")
  '(/load "lib/queue")
  '(/load "lib/range")
  '(/load "lib/read-csv")
  '(/load "lib/realunixtime")
  (/load "lib/tsort")
  (/load "lib/require")
  (/load "lib/require-util")
  '(/load "lib/ringbuffer")
  '(/load "lib/safe-fx")
  '(/load "lib/skein-code")
  '(/load "lib/skein")
  '(/load "lib/skein-test")
  '(/load "lib/statprof")
  '(/load "lib/statprof/ring")
  '(/load "lib/statprof/example")
  '(/load "lib/svg")
  '(/load "lib/symboltable-bench")
  '(/load "lib/symboltable-lib")
  '(/load "lib/symboltable-test")
  '(/load "lib/table")
  '(/load "lib/ternary")
  '(/load "lib/timepoint")
  '(/load "lib/tinymt")
  '(/load "lib/token-table")
  '(/load "lib/track")
  '(/load "lib/u8vector")
  '(/load "lib/unixtime-Cpart-strptime")
  '(/load "lib/utf8-test")
  '(/load "lib/uuid")
  '(/load "lib/values-util")
  '(/load "lib/vector-util-1")
  '(/load "lib/wbmcollection")
  '(/load "lib/wbtable")
  '(/load "lib/wbsymboltable")
  '(/load "lib/wbtree-benchmarks")
  (/load "lib/wbtree-test")
  '(/load "lib/write-csv")
  '(/load "lib/xhtml"))

(define /load i/load)

(/load "treesearch")
(/load "main")
(/load "to-julia")
(/load "to-go")

